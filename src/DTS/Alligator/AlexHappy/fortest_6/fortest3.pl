:- style_check(-singleton).

:-use_module(swi_alligator,[prove/2]).
:- op(500,xfx,:).
:- op(300,yfx,-).
:- op(400,xfy,=>).
:- op(400,xfy,&).
:- op(300,fy,~).
:- dynamic checktheorem/6.
writeResult(Logic,ID,Prediction,Gold,Fname) :-
format('~w&~w&~w&~w&~w~n', [Logic,ID,Prediction,Gold,Fname]).
evalyes(Logic,ID) :-
  checkTheorem(Logic,ID,Context,Theorem,Gold,Fname),
  ( prove(Context,_ : Theorem) -> writeResult(Logic,ID,yes,Gold,Fname)).
evalno(Logic,ID) :-
  checkTheorem(Logic,ID,Context,Theorem,Gold,Fname),
  ( prove(Context,_ : ( ~ (Theorem) ) ) -> writeResult(Logic,ID,no,Gold,Fname) ).
checkTheorem(syn , 18 , [ type:set ,n : (( type )) , m : (( type )) ] , ~( ~( ( ( ( m ) ) -> ( ( n ) ) ) & ( ( ( n ) ) -> ( ( m ) ) ) ) ) , no , '../../TPTP-v7.3.0/Problems/SYN/SYN015-1.p').
checkTheorem(syn , 19 , [ type:set ,n : (( type )) , g : (( ( type ) ) -> ( ( prop ) )) , m : (( type )) , f : (( ( type ) ) -> ( ( prop ) )) , k : (( type )) , a : (( type )) , element : (( ( type ) ) -> ( ( ( type ) ) -> ( ( prop ) ) )) , bigC : (( type )) , bigB : (( type )) , bigA : (( type )) , bigZ : (( type )) , bigY : (( type )) , equalish : (( ( type ) ) -> ( ( ( type ) ) -> ( ( prop ) ) )) , bigX : (( type )) , axiom4 : (( ( equalish ) )-( ( bigX ) )-( ( bigX ) )) , axiom3 : (( ~( ( ( equalish ) )-( ( bigX ) )-( ( bigY ) ) ) ) \/ ( ( ( equalish ) )-( ( bigY ) )-( ( bigX ) ) )) , axiom2 : (( ~( ( ( equalish ) )-( ( bigX ) )-( ( bigY ) ) ) ) \/ ( ( ~( ( ( equalish ) )-( ( bigY ) )-( ( bigZ ) ) ) ) \/ ( ( ( equalish ) )-( ( bigX ) )-( ( bigZ ) ) ) )) , axiom1 : (( ~( ( ( equalish ) )-( ( bigA ) )-( ( bigB ) ) ) ) \/ ( ( ~( ( ( element ) )-( ( bigC ) )-( ( bigA ) ) ) ) \/ ( ( ( element ) )-( ( bigC ) )-( ( bigB ) ) ) )) , axiom0 : (( ~( ( ( element ) )-( ( bigA ) )-( ( bigB ) ) ) ) \/ ( ( ~( ( ( equalish ) )-( ( bigA ) )-( ( bigC ) ) ) ) \/ ( ( ( element ) )-( ( bigC ) )-( ( bigB ) ) ) )) ] , ( ~( ( ~( ( ~( ( ~( ( ~( ( ~( ( ~( ( ~( ( ~( ( ~( ( ~( ( ~( ( ~( ( ~( ( ~( ( ~( ( ~( ( ~( ( ~( ( ~( ~( ( ~( ( ( element ) )-( ( bigA ) )-( ( a ) ) ) ) \/ ( ( ( ( equalish ) )-( ( bigA ) )-( ( k ) ) ) \/ ( ( ( equalish ) )-( ( bigA ) )-( ( a ) ) ) ) ) ) ) & ( ( ~( ( ( equalish ) )-( ( bigA ) )-( ( k ) ) ) ) \/ ( ( ( ( element ) )-( ( bigA ) )-( ( a ) ) ) \/ ( ( ( equalish ) )-( ( bigA ) )-( ( a ) ) ) ) ) ) ) & ( ( ~( ( ( equalish ) )-( ( ( f ) )-( ( bigA ) ) )-( ( m ) ) ) ) \/ ( ( ~( ( ( element ) )-( ( bigA ) )-( ( m ) ) ) ) \/ ( ( ( equalish ) )-( ( bigA ) )-( ( m ) ) ) ) ) ) ) & ( ( ~( ( ( equalish ) )-( ( ( f ) )-( ( bigA ) ) )-( ( bigA ) ) ) ) \/ ( ( ~( ( ( element ) )-( ( bigA ) )-( ( m ) ) ) ) \/ ( ( ( equalish ) )-( ( bigA ) )-( ( m ) ) ) ) ) ) ) & ( ( ( ( element ) )-( ( bigA ) )-( ( ( f ) )-( ( bigA ) ) ) ) \/ ( ( ~( ( ( element ) )-( ( bigA ) )-( ( m ) ) ) ) \/ ( ( ( equalish ) )-( ( bigA ) )-( ( m ) ) ) ) ) ) ) & ( ( ( ( element ) )-( ( ( f ) )-( ( bigA ) ) )-( ( bigA ) ) ) \/ ( ( ~( ( ( element ) )-( ( bigA ) )-( ( m ) ) ) ) \/ ( ( ( equalish ) )-( ( bigA ) )-( ( m ) ) ) ) ) ) ) & ( ( ~( ( ( element ) )-( ( bigA ) )-( ( bigB ) ) ) ) \/ ( ( ~( ( ( element ) )-( ( bigB ) )-( ( bigA ) ) ) ) \/ ( ( ( ( equalish ) )-( ( bigA ) )-( ( bigB ) ) ) \/ ( ( ( ( equalish ) )-( ( bigA ) )-( ( m ) ) ) \/ ( ( ( ( element ) )-( ( bigB ) )-( ( m ) ) ) \/ ( ( ( equalish ) )-( ( bigB ) )-( ( m ) ) ) ) ) ) ) ) ) ) & ( ( ~( ( ( equalish ) )-( ( ( g ) )-( ( bigA ) ) )-( ( n ) ) ) ) \/ ( ( ( ( element ) )-( ( bigA ) )-( ( n ) ) ) \/ ( ( ( equalish ) )-( ( bigA ) )-( ( n ) ) ) ) ) ) ) & ( ( ~( ( ( equalish ) )-( ( ( g ) )-( ( bigA ) ) )-( ( bigA ) ) ) ) \/ ( ( ( ( element ) )-( ( bigA ) )-( ( n ) ) ) \/ ( ( ( equalish ) )-( ( bigA ) )-( ( n ) ) ) ) ) ) ) & ( ( ( ( element ) )-( ( bigA ) )-( ( ( g ) )-( ( bigA ) ) ) ) \/ ( ( ( ( element ) )-( ( bigA ) )-( ( n ) ) ) \/ ( ( ( equalish ) )-( ( bigA ) )-( ( n ) ) ) ) ) ) ) & ( ( ( ( element ) )-( ( ( g ) )-( ( bigA ) ) )-( ( bigA ) ) ) \/ ( ( ( ( element ) )-( ( bigA ) )-( ( n ) ) ) \/ ( ( ( equalish ) )-( ( bigA ) )-( ( n ) ) ) ) ) ) ) & ( ( ~( ( ( element ) )-( ( bigA ) )-( ( bigB ) ) ) ) \/ ( ( ~( ( ( element ) )-( ( bigB ) )-( ( bigA ) ) ) ) \/ ( ( ( ( equalish ) )-( ( bigA ) )-( ( bigB ) ) ) \/ ( ( ( ( equalish ) )-( ( bigA ) )-( ( n ) ) ) \/ ( ( ~( ( ( element ) )-( ( bigB ) )-( ( n ) ) ) ) \/ ( ( ( equalish ) )-( ( bigB ) )-( ( n ) ) ) ) ) ) ) ) ) ) & ( ( ~( ( ( equalish ) )-( ( bigA ) )-( ( m ) ) ) ) \/ ( ( ( ( element ) )-( ( bigA ) )-( ( k ) ) ) \/ ( ( ( equalish ) )-( ( bigA ) )-( ( k ) ) ) ) ) ) ) & ( ( ~( ( ( equalish ) )-( ( bigA ) )-( ( n ) ) ) ) \/ ( ( ( ( element ) )-( ( bigA ) )-( ( k ) ) ) \/ ( ( ( equalish ) )-( ( bigA ) )-( ( k ) ) ) ) ) ) ) & ( ( ~( ( ( element ) )-( ( bigA ) )-( ( k ) ) ) ) \/ ( ( ( ( equalish ) )-( ( bigA ) )-( ( n ) ) ) \/ ( ( ( ( equalish ) )-( ( bigA ) )-( ( m ) ) ) \/ ( ( ( equalish ) )-( ( bigA ) )-( ( k ) ) ) ) ) ) ) ) & ( ~( ( ( equalish ) )-( ( n ) )-( ( a ) ) ) ) ) ) & ( ~( ( ( equalish ) )-( ( m ) )-( ( n ) ) ) ) ) ) & ( ~( ( ( equalish ) )-( ( n ) )-( ( k ) ) ) ) ) ) & ( ~( ( ( equalish ) )-( ( m ) )-( ( a ) ) ) ) ) ) & ( ~( ( ( equalish ) )-( ( k ) )-( ( a ) ) ) ) ) ) & ( ( ( equalish ) )-( ( m ) )-( ( k ) ) ) , no , '../../TPTP-v7.3.0/Problems/SYN/SYN015-2.p').
checkTheorem(syn , 20 , [ type:set ,t : (( type )) , s : (( type )) , r : (( type )) , p : (( type )) , q : (( type )) , axiom4 : (( ( q ) ) \/ ( ( p ) )) , axiom3 : (( ~( ( q ) ) ) \/ ( ( r ) )) , axiom2 : (( ~( ( r ) ) ) \/ ( ( s ) )) , axiom1 : (( ~( ( s ) ) ) \/ ( ( ~( ( r ) ) ) \/ ( ( t ) ) )) , axiom0 : (( ~( ( t ) ) ) \/ ( ( p ) )) ] , ~( ~( ( p ) ) ) , no , '../../TPTP-v7.3.0/Problems/SYN/SYN028-1.p').
checkTheorem(syn , 21 , [ type:set ,r : (( type )) , p : (( type )) , q : (( type )) , axiom3 : (( ( q ) ) \/ ( ( p ) )) , axiom2 : (( ~( ( p ) ) ) \/ ( ( q ) )) , axiom1 : (( ~( ( r ) ) ) \/ ( ( ~( ( q ) ) ) \/ ( ( p ) ) )) , axiom0 : (( r )) ] , ~( ( ~( ( p ) ) ) \/ ( ~( ( q ) ) ) ) , no , '../../TPTP-v7.3.0/Problems/SYN/SYN029-1.p').
checkTheorem(syn , 22 , [ type:set ,q : (( type )) , r : (( type )) , p : (( type )) , s : (( type )) , t : (( type )) , axiom7 : (( ~( ( t ) ) ) \/ ( ( ~( ( s ) ) ) \/ ( ( p ) ) )) , axiom6 : (( ~( ( r ) ) ) \/ ( ( s ) )) , axiom5 : (( ~( ( t ) ) ) \/ ( ( r ) )) , axiom4 : (( ~( ( r ) ) ) \/ ( ( ~( ( q ) ) ) \/ ( ( t ) ) )) , axiom3 : (( ~( ( q ) ) ) \/ ( ( r ) )) , axiom2 : (( ( q ) ) \/ ( ( r ) )) , axiom1 : (( ~( ( r ) ) ) \/ ( ( q ) )) , axiom0 : (( ~( ( s ) ) ) \/ ( ( ~( ( p ) ) ) \/ ( ( q ) ) )) ] , ~( ( ~( ( p ) ) ) \/ ( ( ~( ( q ) ) ) \/ ( ~( ( r ) ) ) ) ) , no , '../../TPTP-v7.3.0/Problems/SYN/SYN030-1.p').
checkTheorem(syn , 23 , [ type:set ,bigB : (( type )) , f : (( type )) , g : (( ( type ) ) -> ( ( ( type ) ) -> ( ( prop ) ) )) , a : (( type )) , bigA : (( type )) , axiom3 : (( ( ( g ) )-( ( bigA ) )-( ( a ) ) ) \/ ( ( ( g ) )-( ( ( f ) )-( ( bigA ) ) )-( ( bigA ) ) )) , axiom2 : (( ( ( g ) )-( ( bigA ) )-( ( a ) ) ) \/ ( ( ( g ) )-( ( bigA ) )-( ( ( f ) )-( ( bigA ) ) ) )) , axiom1 : (( ~( ( ( g ) )-( ( bigA ) )-( ( bigB ) ) ) ) \/ ( ( ( g ) )-( ( ( f ) )-( ( bigB ) ) )-( ( bigB ) ) )) , axiom0 : (( ~( ( ( g ) )-( ( bigA ) )-( ( bigB ) ) ) ) \/ ( ( ( g ) )-( ( bigB ) )-( ( ( f ) )-( ( bigB ) ) ) )) ] , ~( ( ~( ( ( g ) )-( ( bigA ) )-( ( bigB ) ) ) ) \/ ( ~( ( ( g ) )-( ( bigB ) )-( ( a ) ) ) ) ) , no , '../../TPTP-v7.3.0/Problems/SYN/SYN031-1.p').
